// <auto-generated />
using System;
using MessHall.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessHall.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210224214850_MoreRelationalRecipes")]
    partial class MoreRelationalRecipes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MessHall.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CaloriesPerUnit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            CaloriesPerUnit = 50.0,
                            Description = "An apple",
                            Name = "Apple",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            CaloriesPerUnit = 150.0,
                            Description = "Some sugar",
                            Name = "Sugar",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 3,
                            CaloriesPerUnit = 350.0,
                            Description = "Some meat",
                            Name = "Meat",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 4,
                            CaloriesPerUnit = 10.0,
                            Description = "Some garlic",
                            Name = "Garlic",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 5,
                            CaloriesPerUnit = 200.0,
                            Description = "Some sauce",
                            Name = "Sauce",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 6,
                            CaloriesPerUnit = 100.0,
                            Description = "Some pasta",
                            Name = "Pasta",
                            RecipeId = 3
                        });
                });

            modelBuilder.Entity("MessHall.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Description = "A description of a pie",
                            Name = "Apple Pie",
                            Notes = "Sample notes"
                        },
                        new
                        {
                            RecipeId = 2,
                            Description = "A description of a lasagna",
                            Name = "Lasagna",
                            Notes = "Sample notes"
                        },
                        new
                        {
                            RecipeId = 3,
                            Description = "A description of spaghetti",
                            Name = "Spaghetti",
                            Notes = "Sample notes"
                        });
                });

            modelBuilder.Entity("MessHall.Models.Ingredient", b =>
                {
                    b.HasOne("MessHall.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
